/* -*- Mode: IDL; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set sw=2 ts=2 autoindent cindent expandtab: */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface nsIDOMDOMRequest;

[scriptable,uuid(af1ab247-9048-4794-8809-006230f7a354)]
interface nsIDOMPushNotificationManager : nsISupports
{
  /**
   * Register the application with notification server.
   *
   * This function will return an URL for sending messages through
   * DOMRequest.
   *
   * @param token
   *        is the token used to uniquely identify the WEB App.
   * @param pubkey
   *        is the public key used by the application server to sign
   *        messages.
   *
   * The pushing URL is available as DOMRequest.result.url after
   * calling onsuccess.
   */
  nsIDOMDOMRequest requestRemotePermission(in DOMString token, in DOMString pubkey);

  /**
   * Discard the pushing URL returned by previous calling of requestURL().
   */
  nsIDOMDOMRequest revokeRemotePermission();

  /**
   * Unregister the device.
   * Restricted method
   */
  nsIDOMDOMRequest unregisterUA();

  /**
   * Unregister an application from push notifications.
   * Restricted method
   */
  nsIDOMDOMRequest unregisterApp(in DOMString manifestURL);

  /**
   * Return an array with the registeres apps.
   */
  nsIDOMDOMRequest getRegisteredApps();

  /**
   * Configure remote push notification settings.
   *
   * options is a JSON with the following optional parameters:
   *
   * - host: string defining the hostname or ip address.
   * - port: long defining the remote port.
   * - ssl: boolean indicating whether to use ssl or not.
   *
   * Return a boolean indicating if the configuration is done succesfully
   */
  boolean setup(in jsval options);

  /**
   * Returns the current configuration in JSON
   */
  jsval getSetup();
};
